I want you to solve planning problems. An example planning problem is: 
 You have 6 depot storeareas, 3 container storeareas, 3 hoists, 3 crates, 1 container0, 1 depot48, 1 loadarea. 
Depot storeares are: depot48-1-1 depot48-1-2 depot48-1-3 depot48-2-1 depot48-2-2 depot48-2-3 
Container storeares are: container-0-0 container-0-1 container-0-2 
Here is a map of depot storeares: 

depot48-1-1 depot48-1-2 depot48-1-3 
depot48-2-1 depot48-2-2 depot48-2-3 

According to the map, adjacent depot storeares are connected. 
All depot storeareas are in depot48. 
crate0 is on container-0-0. 
crate2 is on container-0-2. 
crate1 is on container-0-1. 
All crates and container storeareas are in container0. 
All container storeareas are connected to loadarea. 
depot48-2-2 and loadarea are connected. 
depot48-2-1 depot48-1-3 depot48-1-2 are clear. 
hoist1 is in depot48-1-1
hoist2 is in depot48-2-3
hoist0 is in depot48-2-2
All hoists are available. 
Your goal is to move all crates to depot48. 
The problem PDDL file to this problem is: 
 ; Domain designed by Alfonso Gerevini and Alessandro Saetti
; This file has been automatically generated by the generator available from
; http://zeus.ing.unibs.it/ipc-5/generators/index.html
;
; Map of the Depots:         
; 000    
; 0*0    
;----    
; 48: depot48 area
; *: Depot access point
; =: Transit area

(define (problem storage-9)
(:domain Storage-Propositional)
(:objects
	depot48-1-1 depot48-1-2 depot48-1-3 depot48-2-1 depot48-2-2 depot48-2-3 container-0-0 container-0-1 container-0-2 - storearea
	hoist0 hoist1 hoist2 - hoist
	crate0 crate1 crate2 - crate
	container0 - container
	depot48 - depot
	loadarea - transitarea)

(:init
	(connected depot48-1-1 depot48-2-1)
	(connected depot48-1-1 depot48-1-2)
	(connected depot48-1-2 depot48-2-2)
	(connected depot48-1-2 depot48-1-3)
	(connected depot48-1-2 depot48-1-1)
	(connected depot48-1-3 depot48-2-3)
	(connected depot48-1-3 depot48-1-2)
	(connected depot48-2-1 depot48-1-1)
	(connected depot48-2-1 depot48-2-2)
	(connected depot48-2-2 depot48-1-2)
	(connected depot48-2-2 depot48-2-3)
	(connected depot48-2-2 depot48-2-1)
	(connected depot48-2-3 depot48-1-3)
	(connected depot48-2-3 depot48-2-2)
	(in depot48-1-1 depot48)
	(in depot48-1-2 depot48)
	(in depot48-1-3 depot48)
	(in depot48-2-1 depot48)
	(in depot48-2-2 depot48)
	(in depot48-2-3 depot48)
	(on crate0 container-0-0)
	(on crate1 container-0-1)
	(on crate2 container-0-2)
	(in crate0 container0)
	(in crate1 container0)
	(in crate2 container0)
	(in container-0-0 container0)
	(in container-0-1 container0)
	(in container-0-2 container0)
	(connected loadarea container-0-0) 
	(connected container-0-0 loadarea)
	(connected loadarea container-0-1) 
	(connected container-0-1 loadarea)
	(connected loadarea container-0-2) 
	(connected container-0-2 loadarea)  
	(connected depot48-2-2 loadarea)
	(connected loadarea depot48-2-2)  
	(clear depot48-2-1)
	(clear depot48-1-2)
	(clear depot48-1-3)  
	(at hoist0 depot48-2-2)
	(available hoist0)
	(at hoist1 depot48-1-1)
	(available hoist1)
	(at hoist2 depot48-2-3)
	(available hoist2))

(:goal (and
	(in crate0 depot48)
	(in crate1 depot48)
	(in crate2 depot48)))
) 
Now I have a new planning problem and its description is: 
 You have 4 depot storeareas, 2 container storeareas, 1 hoists, 2 crates, 1 container0, 1 depot48, 1 loadarea. 
Depot storeares are: depot48-1-1 depot48-1-2 depot48-2-1 depot48-2-2 
Container storeares are: container-0-0 container-0-1 
Here is a map of depot storeares: 

depot48-1-1 depot48-1-2 
depot48-2-1 depot48-2-2 

According to the map, adjacent depot storeares are connected. 
All depot storeareas are in depot48. 
crate0 is on container-0-0. 
crate1 is on container-0-1. 
All crates and container storeareas are in container0. 
All container storeareas are connected to loadarea. 
depot48-2-1 and loadarea are connected. 
depot48-1-1 depot48-2-1 depot48-2-2 are clear. 
hoist0 is in depot48-1-2
All hoists are available. 
Your goal is to move all crates to depot48. 
Provide me with the problem PDDL file that describes the new planning problem directly without further explanations?